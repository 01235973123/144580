PLG_CAPTCHA_HASHCASH="Captcha - HashCash"
PLG_CAPTCHA_HASHCASH_XML_DESCRIPTION="<p>Require your visitors browser to perform a complex calculation in javascript before form data is accepted.  This invisible captcha won't annoy your users with text they can't read and won't make your forms ugly with that same unreadable text.</p><h2>How it works:</h2><p>The browser is given a number, and that represents the number of leading zeros it must achieve using a SHA256 hashing function.  It works away at this hashing task until it achieves the number it's looking for while counting the number of tries required to do so.  That count is the answer to the captcha.  The number is quickly tested on the server and passes or fails.</p><h2>Difficulty Level:</h2><p>This is the number of zeros the browser must achieve.  Low numbers are solved quickly, but make your form less secure.  Larger numbers require longer to calculate and make your form unusable until it's completed.  Max difficulty of 5 can mean up to 1/2 million atempts to answer the captcha. Test your systems to figure out what's best for you.</p>"
PLG_CAPTCHA_HASHCASH_DIFFICULTY_LABEL="Difficulty Level"
PLG_CAPTCHA_HASHCASH_DIFFICULTY_DESC="This setting determines the level of difficulty for the HashCash function.  Minimum 2; Maximum 10.  Anything greater than 4 might cause a noticable delay to your users."
PLG_CAPTCHA_HASHCASH_ERROR_EMPTY_RESPONSE="Missing validation data. Please enable JavaScript."
PLG_CAPTCHA_HASHCASH_ERROR_INVALID_RESPONSE="Security validation failed.  You may have waited too long to submit the form."
PLG_CAPTCHA_HASHCASH_DELAYSTART_LABEL="Delay Start"
PLG_CAPTCHA_HASHCASH_DELAYSTART_DESC="Enabling this option will delay the start of the HashCash calculation until the user has made at least one keystroke or altered the form in some way.  Bots that fill in the fields too quickly will be caught by this."
PLG_CAPTCHA_HASHCASH_CDP_LABEL="Enable CDP Runtime Test"
PLG_CAPTCHA_HASHCASH_CDP_DESC="Chrome DevTools Protocol (CDP) is an edge case bot test that may produce false positives when a developer is using the Chrome browser to test their site.  This test will detect the CDP as a bot during the bot detection phase."
PLG_CAPTCHA_HASHCASH_NONCE_LABEL="Enable Nonce Test"
PLG_CAPTCHA_HASHCASH_NONCE_DESC="This test provides an extra input field for a bot to interact with. If the field is filled in, the bot is detected.  This is a very simple test, but it's effective against many bots."
PLG_CAPTCHA_HASHCASH_STYLE_DESC="HashCash has no visible component, because it does not require user interaction. This setting is sort of a joke, it doesn't do anything."
PLG_CAPTCHA_HASHCASH_PUNISH_LABEL="Punish Bots"
PLG_CAPTCHA_HASHCASH_PUNISH_DESC="If a bot is detected, should it be punished with an unsolvable hash requirement? This will make the form unusable for the bot, consuming 100% of CPU time for as long as the bot is willing to wait."
PLG_CAPTCHA_HASHCASH_TRIGGER_LABEL="Trigger JS Event"
PLG_CAPTCHA_HASHCASH_TRIGGER_DESC="You can trigger a javascript event when a bot is detected by listening for the plg_captcha_hashcash event on the window object.  This event carries an object with details about the bot (ip address, user agent, mode of detection, etc). This can be passed on to external systems or analytics such as Google Analytics."
PLG_CAPTCHA_HASHCASH_LOADING="Loading..."
PLG_CAPTCHA_HASHCASH_KNOWNFORMS_LABEL="Decorate Known Forms"
PLG_CAPTCHA_HASHCASH_KNOWNFORMS_DESC="This option will decorate the submit button (disabled + spinner until the captcha is solved) on forms that are known to the plugin.  Unknown forms are not decorated. See the documentation to learn how to add your forms to the known list."